<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:convert="clr-namespace:CP_2021.Infrastructure.Converters"
                    xmlns:convertComp="clr-namespace:CP_2021.Infrastructure.Converters.VisibilityConverters.Complectation"
                    xmlns:convertUtil="clr-namespace:CP_2021.Infrastructure.Converters.Utility"
                    xmlns:fa="http://schemas.fontawesome.com/icons/">

    <!--Converters-->    
    <convert:DateConverter x:Key="DateConverter"/>
    <GridLength x:Key="TreeToggleWidth">30</GridLength>
    <convert:LevelConverter x:Key="LevelSpaceConverter" LevelWidth="{StaticResource TreeToggleWidth}"/>
    <convert:VisibilityConverter x:Key="TreeToggleConverter"/>
    <convert:CanRoleEditConverter x:Key="EditableRole"/>
    <convert:PannelVisibilityConverter x:Key="PannelVisibilityConverter"/>
    <convert:CanRoleEditCheckboxConverter x:Key="EditCheckboxConverter"/>
    <convert:AdministrativePannelVisibilityConverter x:Key="AdministrativeConverter"/>
    <convert:GivenTasksVisibilityConverter x:Key="GivenTaskConverter"/>
    <convert:MyTasksVisibilityConverter x:Key="MyTasksConverter"/>
    <convert:PositionConverter x:Key="PositionConverter"/>
    <convert:ExecutorConverter x:Key="ExecutorConverter"/>
    <convert:ReportAvailabilityConverter x:Key="ReportConverter"/>
    <convert:ManagDocBackgroundConverter x:Key="ManagDocConverter"/>
    <convert:CompletionConverter x:Key="CompletionConverter"/>
    <convert:ShowReportButtonVisibilityConverter x:Key="ShowReportConverter"/>
    <convert:SendReportButtonVisibilityConverter x:Key="SendReportConverter"/>
    <convert:MultiParameterConverter x:Key="MultiParameterConverter"/>
    <convert:TextBoxToDecimalConverter x:Key="StringToDecimalConverter"/>
    <convertComp:PercentageVisibility x:Key="PercentageVisibility"/>
    <convertComp:RackVisibility x:Key="RackVisibility"/>
    <convertComp:ShelfVisibility x:Key="ShelfVisibility"/>
    <convertUtil:AddingPercentage x:Key="AddingPercentage"/>

    <!--Brushes #575757 -->
    <SolidColorBrush x:Key="ForegroundBrush" Color="White" />
    <SolidColorBrush x:Key="BackgroundBrush" Color="#2F732D" />
    <SolidColorBrush x:Key="LightBackgroundBrush" Color="#3E6F9F" />
    <SolidColorBrush x:Key="DatagridHeaderBrush" Color="White"/>
    <SolidColorBrush x:Key="AdditionalColor" Color="#9161C2"/>
    <SolidColorBrush x:Key="FontColor" Color="Black"/>
    <SolidColorBrush x:Key="DisabledButton" Color="Gray"/>
    <SolidColorBrush x:Key="DatagridBorderBrush" Color="Black"/>
    <SolidColorBrush x:Key="LightButtonBackground" Color="#3D963A"/>

    <!--For Datagrid Cells-->
    <Style x:Key="EditingDatagridCellStyle"
           TargetType="TextBox">
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="AcceptsReturn" Value="true" />
    </Style>
    <Style x:Key="DatagridCellStyle"
           TargetType="TextBlock">
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="MaxWidth" Value="300"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="EditingDatagridCenterCellStyle" 
           TargetType="TextBox"
           BasedOn="{StaticResource EditingDatagridCellStyle}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="20"/>
    </Style>
    <Style x:Key="DatagridCenterCellStyle"
           TargetType="TextBlock"
           BasedOn="{StaticResource DatagridCellStyle}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    
    <!--For Datagrid-->
    <Style x:Key="DatagridHeaderTextWrapping" 
           TargetType="DataGridColumnHeader" >
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock TextWrapping="Wrap"
                               Text="{Binding}"
                               Foreground="{StaticResource FontColor}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{StaticResource DatagridBorderBrush}"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Background" Value="{StaticResource DatagridHeaderBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style TargetType="DataGrid"
           x:Key="ExampleStyle">
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource DatagridBorderBrush}" />
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource DatagridBorderBrush}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="False"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
        <Setter Property="Background" Value="{StaticResource DatagridHeaderBrush}"/>
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <!-- Highlight a grid row as the mouse passes over -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightCyan" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <!-- Highlight selected rows -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#ff66ccff" />
                            <Setter Property="BorderBrush" Value="{StaticResource DatagridBorderBrush}" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="#ff66ccff" />
                            <Setter Property="BorderBrush" Value="{StaticResource DatagridBorderBrush}" />
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Foreground" Value="{StaticResource FontColor}" />
                        </Trigger>
                    </Style.Triggers>
                    <!-- Add some padding around the contents of a cell -->
                    <Setter Property="Padding" Value="4,3,4,3" />
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="DataGridCell">
                                <Border Padding="{TemplateBinding Padding}" 
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}">
                                    <ContentPresenter />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style TargetType="Control">
                                <Setter Property="BorderBrush" Value="Transparent" />
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- DatagirdView -->
    <Style x:Key="GridViewHeaderStyle"
           TargetType="GridViewColumnHeader">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <Style TargetType="ListViewItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    </Style>
    
    <!--For Icons-->
    <Style x:Key="TooltipIconStyle" 
           TargetType="fa:ImageAwesome">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
    </Style>
    <Style x:Key="UndoRedoButtons"
           TargetType="fa:ImageAwesome">
        <Setter Property="Height" Value="12"/>
        <Setter Property="Width" Value="12"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
    </Style>
    <Style x:Key="UndoButton" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
    </Style>
    <Style x:Key="PannelImageStyle"
           TargetType="{x:Type Image}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Margin" Value="10"/>
        
    </Style>
    
    <!-- ComboBox -->
    <Style x:Key="SearchBoxStyle" TargetType="ComboBox">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>
    <Style x:Key="SearchBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Foreground" Value="Black"/>
    </Style>
    <!--<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="#31577e"
                  BorderBrush="#6393C2"
                  BorderThickness="1" />
            <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="#31577e" 
                  BorderBrush="#6393C2"
                  BorderThickness="0,0,1,0" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#6393C2" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="Border" Property="Background" Value="#78A1CA" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="#78A1CA" />
                <Setter TargetName="Border" Property="BorderBrush" Value="#78A1CA" />
                <Setter Property="Foreground" Value="#888888"/>
                <Setter TargetName="Arrow" Property="Fill" Value="#78A1CA" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>
    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="#78A1CA"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                                Background="#31577e"

                                BorderThickness="1"
                                BorderBrush="#78A1CA"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#78A1CA"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                              Padding="2"
                              SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="#78A1CA"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    
    <!-- Checkbox -->
    
    <!-- Buttons -->
    <Style x:Key="CircleButton" TargetType="Button">
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Panel.ZIndex" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        
                        <Ellipse Stroke="White" x:Name="ellipse" Fill="{StaticResource BackgroundBrush}" StrokeThickness="1"/>
                        <ContentPresenter x:Name="content"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="ellipse" Property="Fill" Value="{StaticResource LightButtonBackground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="ellipse" Property="StrokeThickness" Value="3"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ellipse" Property="Fill" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TriangleButton" TargetType="Button">
        <!--<Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="50"/>-->
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>

                        <Canvas>
                            <Polygon Points="15,-5 15,10 -5,-5"
                                 Fill="Transparent"
                                 Stroke="Transparent"
                                     x:Name="Triangle"/>
                        </Canvas>
                        <ContentPresenter x:Name="content"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Triangle" Property="Fill" Value="Green"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>