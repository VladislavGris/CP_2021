<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:convert="clr-namespace:CP_2021.Infrastructure.Converters"
                    xmlns:fa="http://schemas.fontawesome.com/icons/">
    
    <!--Converters-->    
    <convert:DateConverter x:Key="DateConverter"/>
    <GridLength x:Key="TreeToggleWidth">30</GridLength>
    <convert:LevelConverter x:Key="LevelSpaceConverter" LevelWidth="{StaticResource TreeToggleWidth}"/>
    <convert:VisibilityConverter x:Key="TreeToggleConverter"/>

    <!--Styles-->

    <SolidColorBrush x:Key="ForegroundBrush" Color="#6393C2" />
    <SolidColorBrush x:Key="BackgroundBrush" Color="#31577e" />
    <SolidColorBrush x:Key="DatagridHeaderBrush" Color="White"/>
    <SolidColorBrush x:Key="FontColor" Color="#575757"/>

    <!--For Datagrid Cells-->
    <Style x:Key="EditingDatagridCellStyle"
           TargetType="TextBox">
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="AcceptsReturn" Value="true" />
    </Style>
    <Style x:Key="DatagridCellStyle"
           TargetType="TextBlock">
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="MaxWidth" Value="300"/>
    </Style>
    <Style x:Key="EditingDatagridCenterCellStyle" 
           TargetType="TextBox"
           BasedOn="{StaticResource EditingDatagridCellStyle}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="DatagridCenterCellStyle"
           TargetType="TextBlock"
           BasedOn="{StaticResource DatagridCellStyle}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>
    
    <!--For Datagrid-->
    <Style x:Key="DatagridHeaderTextWrapping" 
           TargetType="DataGridColumnHeader" >
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock TextWrapping="Wrap"
                               Text="{Binding}"
                               Foreground="{StaticResource FontColor}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Background" Value="{StaticResource DatagridHeaderBrush}"/>
    </Style>
    <Style TargetType="DataGrid"
           x:Key="ExampleStyle">
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundBrush}" />
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource ForegroundBrush}" />
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserResizeColumns" Value="False"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <!-- Highlight a grid row as the mouse passes over -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightCyan" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <!-- Highlight selected rows -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#ff66ccff" />
                            <Setter Property="BorderBrush" Value="{StaticResource ForegroundBrush}" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Background" Value="#ff66ccff" />
                            <Setter Property="BorderBrush" Value="{StaticResource ForegroundBrush}" />
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="Foreground" Value="{StaticResource FontColor}" />
                        </Trigger>
                    </Style.Triggers>
                    <!-- Add some padding around the contents of a cell -->
                    <Setter Property="Padding" Value="4,3,4,3" />
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="DataGridCell">
                                <Border Padding="{TemplateBinding Padding}" 
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}">
                                    <ContentPresenter />
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style TargetType="Control">
                                <Setter Property="BorderBrush" Value="Transparent" />
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!--For Icons-->
    <Style x:Key="TooltipIconStyle" 
           TargetType="fa:ImageAwesome">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Width" Value="25"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Foreground" Value="#FF5C99D6"/>
    </Style>
    <Style x:Key="PannelImageStyle"
           TargetType="{x:Type Image}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Margin" Value="10"/>
        
    </Style>
</ResourceDictionary>