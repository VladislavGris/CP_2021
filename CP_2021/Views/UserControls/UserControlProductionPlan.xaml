<UserControl x:Class="CP_2021.Views.UserControls.UserControlProductionPlan"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:CP_2021.Views.UserControls"
             xmlns:vm="clr-namespace:CP_2021.ViewModels"
             xmlns:fa="http://schemas.fontawesome.com/icons/"
             xmlns:convert="clr-namespace:CP_2021.Infrastructure.Converters"
             xmlns:ie="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style TargetType="ListViewItem" x:Key="RemoveSelectionHighlight">
            <Setter Property="BorderBrush" Value="Transparent"/>
        </Style>
    </UserControl.Resources>
    <UserControl.InputBindings>
        <KeyBinding Key="F5" Command="{Binding UpdateModelCommand}"/>
    </UserControl.InputBindings>
    <UserControl.DataContext>
        <vm:ProductionPlanControlViewModel/>
    </UserControl.DataContext>
    <Grid x:Name="MainGrid">

        <Grid.RowDefinitions>
            <RowDefinition Height="{Binding User.Position, Converter={StaticResource PannelVisibilityConverter}}"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0"
              Background="#FF31577E">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="6*"/>
                    <ColumnDefinition Width="5*"/>
                </Grid.ColumnDefinitions>
                <ListView x:Name="ListViewMenu"
                          Grid.Column="0"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      ScrollViewer.VerticalScrollBarVisibility="Disabled"
                          Background="Transparent"
                          BorderBrush="Transparent"
                          Foreground="#FF5C99D6">
                    <ListView.Resources>
                        <Style x:Key="FocusVisual">
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#3D26A0DA"/>
                        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="Transparent"/>
                        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
                        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="Transparent"/>
                        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
                        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="Transparent"/>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                            <Setter Property="Padding" Value="4,1"/>
                            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                    <Condition Property="IsSelected" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                    <Condition Property="IsSelected" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                                            </MultiTrigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.Resources>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"></StackPanel>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListViewItem Width="60"
                              ToolTip="Добавить на тот же уровень">
                        <ListViewItem.InputBindings>
                            <MouseBinding Command="{Binding AddProductionTaskCommand}" MouseAction="LeftClick"/>
                        </ListViewItem.InputBindings>
                        <Image Width="40"                                              Height="40"
                           Margin="5">
                            <Image.Source>
                                <BitmapImage UriSource="/Resources/Images/add_root.png"/>
                            </Image.Source>
                        </Image>
                    </ListViewItem>
                    <ListViewItem Width="60"
                              ToolTip="Добавить на уровень ниже">
                        <ListViewItem.InputBindings>
                            <MouseBinding Command="{Binding AddChildCommand}" MouseAction="LeftClick"/>
                        </ListViewItem.InputBindings>
                        <Image Width="40"
                           Height="40"
                           Margin="5">
                            <Image.Source>
                                <BitmapImage UriSource="/Resources/Images/add_child.png"/>
                            </Image.Source>
                        </Image>
                    </ListViewItem>
                    <ListViewItem x:Name="RemoveTaskItem" Width="60"
                              ToolTip="Удалить задачу">
                        <ListViewItem.InputBindings>
                            <MouseBinding Command="{Binding DeleteProductionTaskCommand}" MouseAction="LeftClick"/>
                        </ListViewItem.InputBindings>
                        <fa:ImageAwesome Icon="Solid_Minus"
                                     Style="{StaticResource TooltipIconStyle}"/>
                    </ListViewItem>
                    <ListViewItem x:Name="LevelUpItem" Width="60"
                              ToolTip="Повысить уровень">
                        <ListViewItem.InputBindings>
                            <MouseBinding Command="{Binding LevelUpCommand}" MouseAction="LeftClick"/>
                        </ListViewItem.InputBindings>
                        <fa:ImageAwesome Icon="Solid_LevelUpAlt"
                                     Style="{StaticResource TooltipIconStyle}"/>
                    </ListViewItem>
                    <ListViewItem x:Name="LevelDownItem" Width="60"
                              ToolTip="Понизить уровень">
                        <ListViewItem.InputBindings>
                            <MouseBinding Command="{Binding LevelDownCommand}" MouseAction="LeftClick"/>
                        </ListViewItem.InputBindings>
                        <fa:ImageAwesome Icon="Solid_LevelDownAlt"
                                     Style="{StaticResource TooltipIconStyle}"/>
                    </ListViewItem>
                    <ListViewItem x:Name="ExpandAllItem" Width="60"
                              ToolTip="Развернуть все">
                        <ListViewItem.InputBindings>
                            <MouseBinding Command="{Binding ExpandAllCommand}" MouseAction="LeftClick"/>
                        </ListViewItem.InputBindings>
                        <fa:ImageAwesome Icon="Regular_ArrowAltCircleDown"
                                     Style="{StaticResource TooltipIconStyle}"/>
                    </ListViewItem>
                    <ListViewItem x:Name="HideAllItem" Width="60"
                              ToolTip="Свернуть все">
                        <ListViewItem.InputBindings>
                            <MouseBinding Command="{Binding RollUpAllCommand}" MouseAction="LeftClick"/>
                        </ListViewItem.InputBindings>
                        <fa:ImageAwesome Icon="Regular_ArrowAltCircleUp"
                                     Style="{StaticResource TooltipIconStyle}"/>
                    </ListViewItem>
                    <ListViewItem x:Name="UpdateModel" Width="60"
                              ToolTip="Обновить">
                        <ListViewItem.InputBindings>
                            <MouseBinding Command="{Binding UpdateModelCommand}" MouseAction="LeftClick"/>
                        </ListViewItem.InputBindings>
                        <Image Style="{StaticResource PannelImageStyle}">
                            <Image.Source>
                                <BitmapImage UriSource="/Resources/Images/refresh.png"/>
                            </Image.Source>
                        </Image>
                    </ListViewItem>
                    <ListViewItem x:Name="UpTask" Width="60"
                              ToolTip="Поднять задачу">
                        <ListViewItem.InputBindings>
                            <MouseBinding Command="{Binding UpTaskCommand}" MouseAction="LeftClick"/>
                        </ListViewItem.InputBindings>
                        <fa:ImageAwesome Icon="Solid_ArrowUp"
                                             Style="{StaticResource TooltipIconStyle}"/>
                    </ListViewItem>
                    <ListViewItem x:Name="DownTask" Width="60"
                              ToolTip="Опустить задачу">
                        <ListViewItem.InputBindings>
                            <MouseBinding Command="{Binding DownTaskCommand}" MouseAction="LeftClick"/>
                        </ListViewItem.InputBindings>
                        <fa:ImageAwesome Icon="Solid_ArrowDown"
                                             Style="{StaticResource TooltipIconStyle}"/>
                    </ListViewItem>
                    <ListViewItem x:Name="Undo" Width="60"
                              ToolTip="Отменить изменения">
                        <ListViewItem.InputBindings>
                            <MouseBinding Command="{Binding UndoCommand}" MouseAction="LeftClick"/>
                        </ListViewItem.InputBindings>
                        <fa:ImageAwesome Icon="Solid_ArrowLeft"
                                     Style="{StaticResource TooltipIconStyle}"/>
                    </ListViewItem>
                    <ListViewItem x:Name="Redo" Width="60"
                              ToolTip="Вернуть изменения">
                        <ListViewItem.InputBindings>
                            <MouseBinding Command="{Binding RedoCommand}" MouseAction="LeftClick"/>
                        </ListViewItem.InputBindings>
                        <fa:ImageAwesome Icon="Solid_ArrowRight"
                                     Style="{StaticResource TooltipIconStyle}"/>
                    </ListViewItem>
                </ListView>
                <StackPanel
                    Grid.Column="1"
                    Orientation="Horizontal"
              Background="{StaticResource BackgroundBrush}">
                    <Label Content="Поиск по "
                   Style="{StaticResource LabelStyle}"
                   VerticalAlignment="Center"/>
                    <ComboBox Height="30"
                      SelectedIndex="{Binding SelectedSearchIndex, UpdateSourceTrigger=PropertyChanged}"
                      Style="{StaticResource SearchBoxStyle}"
                      ItemContainerStyle="{StaticResource SearchBoxItemStyle}"
                      ItemsSource="{Binding SearchComboBoxContent}"
                      IsTextSearchEnabled="True"
                      IsTextSearchCaseSensitive="False"
                      IsEditable="True">
                    </ComboBox>
                    <TextBox Style="{StaticResource SearchStrStyle}"
                     Text="{Binding SearchString, UpdateSourceTrigger=PropertyChanged}"
                     Width="200"
                     Height="30"
                     Margin="10 0 0 0"/>
                    <Button Style="{StaticResource CircleButton}"
                    Height="30"
                    Width="30"
                    VerticalAlignment="Center"
                    ToolTip="Найти"
                    Margin="5 0 0 0"
                    Command="{Binding SearchCommand}"
                    CommandParameter="{Binding ElementName=Grid}">
                        <Button.Content>
                            <fa:ImageAwesome Icon="Solid_Search"
                                     Foreground="White"
                                     Height="20"
                                     Width="20"/>

                        </Button.Content>
                    </Button>
                    <Button Style="{StaticResource CircleButton}"
                    Height="30"
                    Width="30"
                    VerticalAlignment="Center"
                    ToolTip="Предыдущий результат"
                    Margin="5 0 0 0"
                    Command="{Binding MovePreviousResultCommand}"
                    CommandParameter="{Binding ElementName=Grid}">
                        <Button.Content>
                            <fa:ImageAwesome Icon="Regular_ArrowAltCircleLeft"
                                     Foreground="White"
                                     Height="30"
                                     Width="30"/>
                        </Button.Content>
                    </Button>
                    <Button Style="{StaticResource CircleButton}"
                    Height="30"
                    Width="30"
                    VerticalAlignment="Center"
                    ToolTip="Следующий результат"
                    Margin="5 0 0 0"
                    Command="{Binding MoveNextResultCommand}"
                    CommandParameter="{Binding ElementName=Grid}">
                        <Button.Content>
                            <fa:ImageAwesome Icon="Regular_ArrowAltCircleRight"
                                     Foreground="White"
                                     Height="30"
                                     Width="30"/>
                        </Button.Content>
                    </Button>
                    <!--<Label Content="{Binding SearchResultString}"
                   Style="{StaticResource LabelStyle}"
                   VerticalAlignment="Center"/>-->
                </StackPanel>
            </Grid>
            
        </Grid>
        <DataGrid Name="Grid"
                  Grid.Row="1"
                  ItemsSource="{Binding Model.FlatModel}"
                  Style="{StaticResource ExampleStyle}"
                  ColumnHeaderStyle="{StaticResource DatagridHeaderTextWrapping}"
                  CanUserDeleteRows="False"
                  SelectedItem="{Binding SelectedTask}"
                  IsReadOnly="{Binding User.Position, Converter={StaticResource EditableRole}}">
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Вырезать"
                              Command="{Binding CutTaskCommand}">
                        <MenuItem.Icon>
                            <fa:ImageAwesome Icon="Solid_Cut"
                                             Foreground="{StaticResource ForegroundBrush}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Копировать"
                              Command="{Binding CopyTaskCommand}">
                        <MenuItem.Icon>
                            <fa:ImageAwesome Icon="Regular_Copy"
                                             Foreground="{StaticResource ForegroundBrush}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem Header="Вставить"
                              Command="{Binding PasteTaskCommand}">
                        <MenuItem.Icon>
                            <fa:ImageAwesome Icon="Solid_Paste"
                                             Foreground="{StaticResource ForegroundBrush}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator/>
                    <MenuItem Header="Удалить"
                              Command="{Binding DeleteProductionTaskCommand}">
                        <MenuItem.Icon>
                            <fa:ImageAwesome Icon="Solid_Minus"
                                             Foreground="{StaticResource ForegroundBrush}"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>

                        <DataTrigger Binding="{Binding Task.Completion}" Value="1">
                            <Setter Property="Background" Value="Pink"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Task.Completion}" Value="2">
                            <Setter Property="Background" Value="#8CA19A"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Task.Completion}" Value="3">
                            <Setter Property="Background" Value="Yellow"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Task.Completion}" Value="4">
                            <Setter Property="Background" Value="#0DCA8B"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Task.Completion}" Value="5">
                            <Setter Property="Background" Value="#E86DE7"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Task.Completion}" Value="6">
                            <Setter Property="Background" Value="#EED092"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Task.Completion}" Value="7">
                            <Setter Property="Background" Value="#72AE3B"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Выполнение">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Task.Completion, Converter={StaticResource CompletionConverter}}"
                                       HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <ComboBox SelectedIndex="{Binding Task.Completion, UpdateSourceTrigger=PropertyChanged}"
                                      Background="Transparent">
                                <ComboBoxItem Content="Не задано"/>

                                <ComboBoxItem Content="Отработка документации"/>
                                <ComboBoxItem Content="ВК на склад"/>
                                <ComboBoxItem Content="В работе"/>
                                <ComboBoxItem Content="Формирование актов"/>
                                <ComboBoxItem Content="Проверка СКБ"/>
                                <ComboBoxItem Content="Склад ОЭЦ"/>
                                <ComboBoxItem Content="Склад"/>
                            </ComboBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn x:Name="Document">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <fa:ImageAwesome Icon="Solid_PencilAlt"
                                                 Foreground="{StaticResource ForegroundBrush}"
                                                 Width="12"
                                                 Height="12"/>
                                <TextBlock Text="Документ"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock MaxWidth="140"
                                       TextWrapping="Wrap"
                                       Text="{Binding Task.ManagDoc, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="Документ"/>
                                <TextBox Text="{Binding Task.ManagDoc, UpdateSourceTrigger=PropertyChanged}"
                                     AcceptsReturn="True"
                                     TextWrapping="Wrap"
                                     MaxWidth="140"/>
                                <TextBlock Text="Желаемая дата"/>
                                <DatePicker SelectedDate="{Binding Task.VishDate, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text="Реальная дата"/>
                                <DatePicker SelectedDate="{Binding Task.RealDate, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn Header="Изделие">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding Level, Converter={StaticResource LevelSpaceConverter}}"/>
                                    <ColumnDefinition Width="{StaticResource TreeToggleWidth}"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Expander Grid.Column="1"
                                          IsExpanded="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          Visibility="{Binding HasChildren, Converter={StaticResource TreeToggleConverter}}" 
                                          Background="Transparent"
                                          
                                          Height="48">
                                    <ie:Interaction.Triggers>
                                        <ie:EventTrigger EventName="Collapsed">
                                            <ie:InvokeCommandAction Command="{Binding DataContext.OnCollapsingCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding .}"/>
                                        </ie:EventTrigger>
                                        <ie:EventTrigger EventName="Expanded">
                                            <ie:InvokeCommandAction Command="{Binding DataContext.OnExpandingCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}" CommandParameter="{Binding .}"/>
                                        </ie:EventTrigger>
                                    </ie:Interaction.Triggers>
                                </Expander>
                                <TextBlock Text="{Binding Task.Name}"
                                           Grid.Column="2"
                                           TextWrapping="Wrap"
                                           MaxWidth="200"/>

                            </Grid>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <TextBox Text="{Binding Task.Name, UpdateSourceTrigger=PropertyChanged}"
                                     AcceptsReturn="True"
                                     TextWrapping="Wrap"
                                     MaxWidth="200"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="Количество"
                                    Binding="{Binding Task.Count, UpdateSourceTrigger=PropertyChanged}"
                                    MaxWidth="145"
                                    ElementStyle="{StaticResource DatagridCenterCellStyle}"
                                    EditingElementStyle="{StaticResource EditingDatagridCenterCellStyle}"/>

                <DataGridTextColumn Header="Стоимость по спецификации"
                                    Binding="{Binding Task.SpecCost, UpdateSourceTrigger=PropertyChanged}"
                                    MaxWidth="110"
                                    ElementStyle="{StaticResource DatagridCenterCellStyle}"
                                    EditingElementStyle="{StaticResource EditingDatagridCenterCellStyle}"/>

                <DataGridTextColumn Header="Приходный документ"
                                    Binding="{Binding Task.IncDoc, UpdateSourceTrigger=PropertyChanged}"
                                    MaxWidth="120"
                                    MinWidth="100"
                                    ElementStyle="{StaticResource DatagridCellStyle}"
                                    EditingElementStyle="{StaticResource EditingDatagridCellStyle}"/>

                <DataGridTemplateColumn MaxWidth="300">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <fa:ImageAwesome Icon="Solid_PencilAlt"
                                                 Foreground="{StaticResource ForegroundBrush}"
                                                 Width="12"
                                                 Height="12"/>
                                <TextBlock Text="Ведомость комплектации"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Task.Complectation.Complectation}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="Ведомость комплектации"/>
                                <TextBox Text="{Binding Task.Complectation.Complectation, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text="Дата комплектации"/>
                                <DatePicker SelectedDate="{Binding Task.Complectation.ComplectationDate, UpdateSourceTrigger=PropertyChanged}"/>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Процент получения: "/>
                                    <TextBlock Text="{Binding Task.Complectation.Percentage}"/>

                                </StackPanel>
                                <Slider Minimum="0" Maximum="100" Value="{Binding Task.Complectation.Percentage, UpdateSourceTrigger=PropertyChanged}" Width="Auto" TickFrequency="1" IsSnapToTickEnabled="True">
                                    <ie:Interaction.Triggers>
                                        <ie:EventTrigger EventName="ValueChanged">
                                            <ie:InvokeCommandAction Command="{Binding DataContext.RowEditingEndingCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"/>
                                        </ie:EventTrigger>
                                    </ie:Interaction.Triggers>
                                </Slider>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn MaxWidth="170">
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <fa:ImageAwesome Icon="Solid_PencilAlt"
                                                 Foreground="{StaticResource ForegroundBrush}"
                                                 Width="12"
                                                 Height="12"/>
                                <TextBlock Text="Выдача в производство"
                                           TextWrapping="Wrap"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Task.InProduction.GivingDate, Converter={StaticResource DateConverter}}"
                                       HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="Номер МСЛ"/>
                                <TextBox Text="{Binding Task.InProduction.Number, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text="Сборка"/>
                                <TextBox Text="{Binding Task.InProduction.ExecutorName, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text="Электромонтаж"/>
                                <TextBox Text="{Binding Task.InProduction.ExecutorName2, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text="Дата выдачи"/>
                                <DatePicker SelectedDate="{Binding Task.InProduction.GivingDate, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text="Дата готовности(план)"/>
                                <DatePicker SelectedDate="{Binding Task.InProduction.ProjectedDate, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text="Дата готовности(факт)"/>
                                <DatePicker SelectedDate="{Binding Task.InProduction.CompletionDate, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <fa:ImageAwesome Icon="Solid_PencilAlt"
                                                 Foreground="{StaticResource ForegroundBrush}"
                                                 Width="12"
                                                 Height="12"/>
                                <TextBlock Text="Изготовитель"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Task.Manufacture.Name}"
                                       HorizontalAlignment="Center"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="Предприятие изготовитель"/>
                                <TextBox Text="{Binding Task.Manufacture.Name, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text="Номер письма"/>
                                <TextBox Text="{Binding Task.Manufacture.LetterNum, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text="Номер спецификации"/>
                                <TextBox Text="{Binding Task.Manufacture.SpecNum, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text="Готовность(п)"/>
                                <DatePicker SelectedDate="{Binding Task.Manufacture.PredictDate, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text="Готовность(факт)"/>
                                <DatePicker SelectedDate="{Binding Task.Manufacture.FactDate, UpdateSourceTrigger=PropertyChanged}"/>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Спецификация на контроле"/>
                                    <CheckBox IsChecked="{Binding Task.Manufacture.OnControl, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Спецификация к выписке"/>
                                    <CheckBox IsChecked="{Binding Task.Manufacture.VipiskSpec, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.HeaderTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <fa:ImageAwesome Icon="Solid_PencilAlt"
                                                 Foreground="{StaticResource ForegroundBrush}"
                                                 Width="12"
                                                 Height="12"/>
                                <TextBlock Text="Давальческая"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.HeaderTemplate>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding Task.Giving.State, UpdateSourceTrigger=PropertyChanged}"
                                      HorizontalAlignment="Center"
                                      Command="{Binding DataContext.RowEditingEndingCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}}"
                                      IsHitTestVisible="{Binding DataContext.User.Position, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}}, Converter={StaticResource EditCheckboxConverter}}"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                    <DataGridTemplateColumn.CellEditingTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="Накладная"/>
                                <TextBox Text="{Binding Task.Giving.Bill, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text="Отчет"/>
                                <TextBox Text="{Binding Task.Giving.Report, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text="Накладная возврата"/>
                                <TextBox Text="{Binding Task.Giving.ReturnReport, UpdateSourceTrigger=PropertyChanged}"/>
                                <StackPanel Orientation="Horizontal"
                                            Margin="0 0 0 5">
                                    <TextBlock Text="Возвратное давальческое"/>
                                    <CheckBox IsChecked="{Binding Task.Giving.ReturnGiving, UpdateSourceTrigger=PropertyChanged}"/>
                                </StackPanel>
                                <TextBlock Text="Срок закупки"/>
                                <DatePicker SelectedDate="{Binding Task.Giving.ReceivingDate, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellEditingTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="Номер и дата акта расходования"
                                    Binding="{Binding Task.ExpendNum, UpdateSourceTrigger=PropertyChanged}"
                                    MaxWidth="135"
                                    ElementStyle="{StaticResource DatagridCellStyle}"
                                    EditingElementStyle="{StaticResource EditingDatagridCellStyle}"/>

                <DataGridTextColumn Header="Примечания"
                                    Binding="{Binding Task.Note, UpdateSourceTrigger=PropertyChanged}"
                                    ElementStyle="{StaticResource DatagridCellStyle}"
                                    EditingElementStyle="{StaticResource EditingDatagridCellStyle}"
                                    Width="200"/>

            </DataGrid.Columns>
            <ie:Interaction.Triggers>
                <ie:EventTrigger EventName="CellEditEnding">
                    <ie:InvokeCommandAction Command="{Binding RowEditingEndingCommand}"/>
                </ie:EventTrigger>
            </ie:Interaction.Triggers>
        </DataGrid>
    </Grid>
</UserControl>
