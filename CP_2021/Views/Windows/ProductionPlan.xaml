<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:CP_2021.ViewModels"
        xmlns:ie="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:fa="http://schemas.fontawesome.com/icons/"
        xmlns:commands="clr-namespace:CP_2021.Infrastructure.Commands"
        x:Class="CP_2021.Views.Windows.ProductionPlan"
        mc:Ignorable="d"
    x:Name="ProductionPlanWindow"
        Title="{Binding Title}" Height="720" Width="1280" MinHeight="550" MinWidth="900" WindowStartupLocation="CenterScreen" Icon="/Views/Windows/icon.png" WindowStyle="ThreeDBorderWindow"
        WindowState="Maximized">
    
    <Window.DataContext>
        <vm:ProductionPlanViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <Storyboard x:Key="OpenMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridMenu">
                <EasingDoubleKeyFrame KeyTime="0" Value="70"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="200"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="CloseMenu">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridMenu">
                <EasingDoubleKeyFrame KeyTime="0" Value="200"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="70"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Style TargetType="Button" x:Key="MenuButtonStyle">
            <Setter Property="Height" Value="60"/>
            <Setter Property="Width" Value="60"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="#FF31577E"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="White" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBlock" x:Key="TooltipTextblockStyle">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="20 10"/>
        </Style>
    </Window.Resources>
    <Window.Triggers>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonOpenMenu">
            <BeginStoryboard Storyboard="{StaticResource OpenMenu}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ButtonCloseMenu">
            <BeginStoryboard Storyboard="{StaticResource CloseMenu}"/>
        </EventTrigger>
    </Window.Triggers>
    <ie:Interaction.Triggers>
        <ie:EventTrigger EventName="Loaded">
            <ie:InvokeCommandAction Command="{Binding WindowLoadedCommand}"/>
        </ie:EventTrigger>
    </ie:Interaction.Triggers>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Name="MenuColumn" Width="Auto" MinWidth="70"/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid x:Name="GridMenu" Width="70" MinWidth="40" HorizontalAlignment="Left" Background="#FF31577E" Grid.Column="0">
            <Grid.Effect>
                <DropShadowEffect BlurRadius="2" ShadowDepth="1" Color="#FFAEAEAE"/>
            </Grid.Effect>
            <StackPanel>
                <Grid Height="150" Background="White" RenderTransformOrigin="0.5,0.5">
                    <Grid.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform/>
                            <SkewTransform/>
                            <RotateTransform/>
                            <TranslateTransform/>
                        </TransformGroup>
                    </Grid.RenderTransform>
                    <Button x:Name="ButtonOpenMenu" 
                            Visibility="{Binding ButtonOpenMenuVisibility}" 
                            Command="{Binding ButtonOpenMenuCommand}">
                        
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Height" Value="60"/>
                                <Setter Property="Width" Value="60"/>
                                <Setter Property="Margin" Value="5"/>
                                <Setter Property="HorizontalAlignment" Value="Right"/>
                                <Setter Property="VerticalAlignment" Value="Top"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="Foreground" Value="#FF31577E"/>
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" BorderBrush="White" BorderThickness="1">
                                                <Grid>
                                                    <fa:ImageAwesome x:Name="icon" Icon="Solid_Bars" Width="25" Height="25" Foreground="#FF31577E"/>
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="icon" Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Button x:Name="ButtonCloseMenu" 
                            Visibility="{Binding ButtonCloseMenuVisibility}"  
                            Command="{Binding ButtonCloseMenuCommand}">

                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Height" Value="60"/>
                                <Setter Property="Width" Value="60"/>
                                <Setter Property="Margin" Value="5"/>
                                <Setter Property="HorizontalAlignment" Value="Right"/>
                                <Setter Property="VerticalAlignment" Value="Top"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="Foreground" Value="#FF31577E"/>
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" BorderBrush="White" BorderThickness="1">
                                                <Grid>
                                                    <fa:ImageAwesome x:Name="icon" Icon="Solid_ArrowLeft" Width="25" Height="25" Foreground="#FF31577E"/>
                                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter TargetName="icon" Property="Foreground" Value="{StaticResource ForegroundBrush}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Image Height="80" VerticalAlignment="Bottom"/>
                </Grid>
                <ListView x:Name="ListViewMenu" 
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                          Background="Transparent"
                          BorderBrush="Transparent"
                          Foreground="#FF5C99D6">
                    <ListView.Resources>
                        <Style x:Key="FocusVisual">
                            <Setter Property="Control.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#3D26A0DA"/>
                        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="Transparent"/>
                        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
                        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="Transparent"/>
                        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
                        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="Transparent"/>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="SnapsToDevicePixels" Value="True"/>
                            <Setter Property="Padding" Value="4,1"/>
                            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                                    <Condition Property="IsSelected" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                                    <Condition Property="IsSelected" Value="True"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                                            </MultiTrigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.Resources>
                    <ie:Interaction.Triggers>
                        <ie:EventTrigger EventName="SelectionChanged">
                            <ie:InvokeCommandAction Command="{Binding ChangeContentCommand}">
                                <ie:InvokeCommandAction.CommandParameter>
                                    <MultiBinding Converter="{StaticResource MultiParameterConverter}">
                                        <Binding Path="SelectedItem" ElementName="ListViewMenu"/>
                                        <Binding Path="." ElementName="ProductionPlanWindow"/>
                                    </MultiBinding>
                                </ie:InvokeCommandAction.CommandParameter>
                            </ie:InvokeCommandAction>
                        </ie:EventTrigger>
                    </ie:Interaction.Triggers>
                    <ListViewItem x:Name="ItemProductionPlan" Height="60">
                        <StackPanel Orientation="Horizontal">
                            <fa:ImageAwesome Icon="Solid_Tasks"
                                             Style="{StaticResource TooltipIconStyle}"/>
                            <TextBlock Text="План производства"
                                       Style="{StaticResource TooltipTextblockStyle}"/>
                        </StackPanel>
                    </ListViewItem>
                    <ListViewItem x:Name="ItemReports" Height="60">
                        <StackPanel Orientation="Horizontal">
                            <fa:ImageAwesome Icon="Solid_PencilAlt"
                                             Style="{StaticResource TooltipIconStyle}"/>
                            <TextBlock Text="Отчеты"
                                       Style="{StaticResource TooltipTextblockStyle}"/>
                        </StackPanel>
                    </ListViewItem>
                    <ListViewItem x:Name="ItemGivenTasks" Height="60"
                                  Visibility="{Binding User.Position, Converter={StaticResource GivenTaskConverter}}">
                        <StackPanel Orientation="Horizontal">
                            <fa:ImageAwesome Icon="Solid_Thumbtack"
                                             Style="{StaticResource TooltipIconStyle}"/>
                            <TextBlock Text="Выданные задачи"
                                       Style="{StaticResource TooltipTextblockStyle}"/>
                        </StackPanel>
                    </ListViewItem>
                    <ListViewItem x:Name="ItemTasks" Height="60"
                                  Visibility="{Binding User.Position, Converter={StaticResource MyTasksConverter}}">
                        <StackPanel Orientation="Horizontal">
                            <fa:ImageAwesome Icon="Solid_CheckSquare"
                                             Style="{StaticResource TooltipIconStyle}"/>
                            <TextBlock Text="Мои задачи"
                                       Style="{StaticResource TooltipTextblockStyle}"/>
                        </StackPanel>
                    </ListViewItem>
                    <ListViewItem x:Name="ItemAdministrativePannel" Height="60"
                                  Visibility="{Binding User.Position, Converter={StaticResource AdministrativeConverter}}">
                        <StackPanel Orientation="Horizontal">
                            <fa:ImageAwesome Icon="Solid_PeopleArrows"
                                             Style="{StaticResource TooltipIconStyle}"/>
                            <TextBlock Text="Администрирование"
                                       Style="{StaticResource TooltipTextblockStyle}"/>
                        </StackPanel>
                    </ListViewItem>
                    <ListViewItem x:Name="ItemHelp" Height="60">
                        <StackPanel Orientation="Horizontal">
                            <fa:ImageAwesome Icon="Solid_Question"
                                             Style="{StaticResource TooltipIconStyle}"/>
                            <TextBlock Text="Помощь"
                                       Style="{StaticResource TooltipTextblockStyle}"/>
                        </StackPanel>
                    </ListViewItem>
                    <ListViewItem x:Name="ItemLogOut" Height="60">
                        <StackPanel Orientation="Horizontal">
                            <fa:ImageAwesome Icon="Solid_SignOutAlt"
                                             Style="{StaticResource TooltipIconStyle}"/>
                            <TextBlock Text="Выход"
                                       Style="{StaticResource TooltipTextblockStyle}"/>
                        </StackPanel>
                    </ListViewItem>
                </ListView>
            </StackPanel>
        </Grid>
        <ContentControl x:Name="ContentContainer" 
                        Grid.Column="1"
                        Content="{Binding ContentContainerContent}"/>
    </Grid>
</Window>
